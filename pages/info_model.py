import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
st.set_page_config(layout="wide")
st.title("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª—è—Ö")

# –í–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
tab1, tab2, tab3 = st.tabs(["–î–µ—Ç–µ–∫—Ü–∏—è –ª–∏—Ü —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –º–∞—Å–∫–∏—Ä–æ–≤–∫–æ–π –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ (–ú–æ–¥–µ–ª—å YOLO12)", 
                           "–î–µ—Ç–µ–∫—Ü–∏—è –≤–µ—Ç—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ (–ú–æ–¥–µ–ª—å YOLO12)", 
                           "–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∞—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —Å–Ω–∏–º–∫–æ–≤ –ó–µ–º–ª–∏ (–ú–æ–¥–µ–ª—å Unet)"])

with tab1:
    st.header("–î–µ—Ç–µ–∫—Ü–∏—è –ª–∏—Ü —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –º–∞—Å–∫–∏—Ä–æ–≤–∫–æ–π –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ (–ú–æ–¥–µ–ª—å YOLO12)")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–∞—Å–µ—Ç–µ
    st.subheader("1. –ß–∏—Å–ª–æ —ç–ø–æ—Ö –æ–±—É—á–µ–Ω–∏—è: 25")
    st.subheader("2. –û–±—ä–µ–º –≤—ã–±–æ—Ä–∫–∏: –º–∏–ª–ª–∏–∞—Ä–¥")
    st.subheader("3. –ú–µ—Ç—Ä–∏–∫–∏")

    metric_options = ['PR-curve', 'All-metrics', 'Confusion matrix', 'Confusion matrix –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è']
    selected_metric = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫—É:", metric_options, key="model1_metric")

    if selected_metric == 'PR-curve':
        st.write('### –ì—Ä–∞—Ñ–∏–∫ PR-curve:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model1/PR_curve.jpg')
    elif selected_metric == 'All-metrics':
        st.write('### All-metrics:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model1/all_metrics.jpg')
    elif selected_metric == 'Confusion matrix –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è':
        st.write('### Confusion matrix –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model1/Conf_metric_norm.jpg')
    elif selected_metric == 'Confusion matrix':
        st.write('### Confusion matrix:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model1/Conf_metric.jpg')

with tab2:
    st.header("–î–µ—Ç–µ–∫—Ü–∏—è –≤–µ—Ç—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ (–ú–æ–¥–µ–ª—å YOLO12)")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–∞—Å–µ—Ç–µ
    st.subheader("1. –ß–∏—Å–ª–æ —ç–ø–æ—Ö –æ–±—É—á–µ–Ω–∏—è: 25")
    st.subheader("2. –û–±—ä–µ–º –≤—ã–±–æ—Ä–∫–∏: –º–∏–ª–ª–∏–∞—Ä–¥")
    st.subheader("3. –ú–µ—Ç—Ä–∏–∫–∏")

    metric_options = ['PR-curve', 'All-metrics', 'Confusion matrix', 'Confusion matrix –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è']
    selected_metric = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫—É:", metric_options, key="model2_metric")

    if selected_metric == 'PR-curve':
        st.write('### –ì—Ä–∞—Ñ–∏–∫ PR-curve:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model2/PR_curve.jpg')
    elif selected_metric == 'All-metrics':
        st.write('### All-metrics:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model2/all_metrics.jpg')
    elif selected_metric == 'Confusion matrix –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è':
        st.write('### Confusion matrix –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model2/Conf_metric_norm.jpg')
    elif selected_metric == 'Confusion matrix':
        st.write('### Confusion matrix:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model2/Conf_metric.jpg')

with tab3:
    st.header("–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –∞—ç—Ä–æ–∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —Å–Ω–∏–º–∫–æ–≤ –ó–µ–º–ª–∏ (–ú–æ–¥–µ–ª—å Unet)")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–∞—Å–µ—Ç–µ
    st.subheader("1. –ß–∏—Å–ª–æ —ç–ø–æ—Ö –æ–±—É—á–µ–Ω–∏—è: 50")
    st.subheader("2. –û–±—ä–µ–º –≤—ã–±–æ—Ä–∫–∏: –º–∏–ª–ª–∏–∞—Ä–¥")
    st.subheader("3. –ú–µ—Ç—Ä–∏–∫–∏")

    metric_options = ['All-metrics']
    selected_metric = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫—É:", metric_options, key="model3_metric")

    if selected_metric == 'All-metrics':
        st.write('### All-metrics1:')
        st.image(f'/home/savely/ds_bootcamp/ds-phase-2/Computer-vision-project/images/model3/all_metrics.jpg')
